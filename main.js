!function(){"use strict";class e{step;element;constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10;this.step=e,this.element=document.getElementById("food"),this.step=e}get X(){return this.element.offsetLeft}set X(e){this.element.style.left=e+"px"}get Y(){return this.element.offsetTop}set Y(e){this.element.style.top=e+"px"}randomPosition(e){const t=10*Math.round(36*Math.random()),s=10*Math.round(39*Math.random());return e.some((e=>{let[i,o]=e;return i===t&&o===s}))?this.randomPosition(e):[10*Math.round(36*Math.random()),10*Math.round(39*Math.random())]}setPositionFood(e){const[t,s]=this.randomPosition(e);this.X=t,this.Y=s}}class t{maxScore;maxLevel;step;scoreElement;levelElement;constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;this.maxScore=e,this.maxLevel=t,this.step=s,this.scoreElement=document.getElementById("score"),this.levelElement=document.getElementById("level"),this.maxScore=e,this.maxLevel=t,this.init()}init(){this.scoreElement.innerText="0",this.levelElement.innerText="1"}get score(){return parseInt(this.scoreElement.innerText)}get level(){return parseInt(this.levelElement.innerText)}addScore(){this.score%this.maxScore===0&&0!==this.score&&this.addLevel(),this.scoreElement.innerText=this.score+this.step+""}addLevel(){this.level<this.maxLevel&&(this.levelElement.innerText=this.level+this.step+"")}}class s{snakeElement;bodiesElement;bodies;maxWidth=360;maxHeight=390;constructor(){this.snakeElement=document.getElementById("snake-box"),this.bodiesElement=document.getElementsByClassName("snake-body"),this.bodies=[[20,0],[10,0],[0,0]],this.init()}init(){for(let e=this.bodies.length-1;e>=0;e--){const t=this.bodies[e],s=this.bodiesElement[e];s.style.left=t[0]+"px",s.style.top=t[1]+"px"}}moveSnake(e){let[t,s]=e;if(t>this.maxWidth||t<0||s>this.maxHeight||s<0)throw new Error("outArea");this.bodies?.pop(),this.bodies?.unshift([t,s]);for(let e=this.bodies.length-1;e>=0;e--){const t=this.bodies[e],s=this.bodiesElement[e];if(s.style.left=t[0]+"px",s.style.top=t[1]+"px",0===e&&this.bodies.some(((e,s)=>0!==s&&e[0]===t[0]&&e[1]===t[1])))throw console.log(this.bodies),new Error("eatSnakeBody")}}eatFood(e){let[t,s]=e;this.bodies.unshift([t,s]);const i=document.createElement("div");i.className="snake-body",i.style.left=t+"px",i.style.top=s+"px",this.snakeElement.appendChild(i)}}new class{stepTimer;food;scoreBoard;snake;direction;gameTimer;controlGameElement;startElement;restartElement;live;constructor(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e3;this.stepTimer=i,this.controlGameElement=document.getElementById("controlGame"),this.startElement=document.getElementById("start"),this.restartElement=document.getElementById("restart"),this.food=new e,this.scoreBoard=new t,this.snake=new s,this.direction="R",this.gameTimer=null,this.stepTimer=i,this.live=!0,this.init()}init(){document.addEventListener("keydown",this.watchKeyBoardPress.bind(this))}watchKeyBoardPress(e){switch(e.key){case"ArrowLeft":case"Left":"R"!==this.direction&&(this.direction="L");break;case"ArrowRight":case"Right":"L"!==this.direction&&(this.direction="R");break;case"ArrowUp":case"Up":"D"!==this.direction&&(this.direction="T");break;case"ArrowDown":case"Down":"T"!==this.direction&&(this.direction="D");break;case"Enter":this.live?this.beginGame():this.restartGame(),this.controlGameElement.style.display="none",this.startElement.style.display="none"}}beginGame(){this.gameExecuteOptions()}restartGame(){location.reload()}gameExecuteOptions(){const e=[...this.snake.bodies[0]];switch(this.direction){case"L":e[0]-=10;break;case"R":e[0]+=10;break;case"T":e[1]-=10;break;case"D":e[1]+=10}if(this.food.X===e[0]&&this.food.Y===e[1])this.snake.eatFood(e),this.scoreBoard.addScore(),this.food.setPositionFood(this.snake.bodies);else try{this.snake.moveSnake(e)}catch(e){console.log(e),clearTimeout(Number(this.gameTimer)),this.controlGameElement.style.display="flex",this.restartElement.style.display="block",this.live=!1}this.live&&setTimeout((()=>{this.gameExecuteOptions()}),this.stepTimer-this.scoreBoard.level*this.stepTimer*.1)}}(400)}();